version: '3'

services:

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "9000:80"
    environment:
      PMA_HOST: databases
      MYSQL_ROOT_PASSWORD: databases
    networks:
      - backend

  databases:
    image: mysql:8.0
    container_name: db
    restart: always
    environment:
      MYSQL_USER: databases
      MYSQL_PASSWORD: databases
      MYSQL_ROOT_PASSWORD: databases
    volumes: 
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
    ports:
      - "3306:3306"
    networks:
      - backend

  payment:
    build: ./payment-service/
    volumes:
      - ./payment-service:/app
    depends_on:
      - rabbitmq
      - databases
    ports:
      - "8005:6000"
    networks:
      - backend

  email:
    build: ./email-service/
    volumes:
      - ./email-service:/app
    depends_on:
        rabbitmq:
          condition: service_healthy
    ports:
      - "8004:6000"
    networks:
      - backend

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - backend

  event:
    build: ./events-service/
    volumes:
      - ./events-service:/app
    depends_on:
        databases:
          condition: service_healthy
        rabbitmq:
          condition: service_healthy
    ports:
      - "8003:6000"
    networks:
      - backend


  user:
    build: ./users-service/
    volumes:
      - ./users-service:/app
    depends_on:
        databases:
          condition: service_healthy
        rabbitmq:
          condition: service_healthy
    ports:
      - "8002:6000"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: amqp-node
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 20s
      timeout: 20s
      retries: 3
    networks:
      - backend


  entrypoint:
    build: ./entrypoint/
    container_name: entrypoint
    volumes:
      - ./entrypoint:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8001:6000"
    networks:
      - backend

  front:
    build: ./frontend-react/
    container_name: frontend-react
    volumes:
      - ./frontend-react/cypress/videos:/usr/src/app/cypress/videos
    ports:
      - "8000:3000"
    command: npm start
    networks:
      - backend


networks:
  backend:
    driver: bridge
    name: backend
